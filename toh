do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (v18==0) then v19=1;v20=nil;v16=v4(v3(v16,5),"..",function(v31)if (v1(v31,2)==79) then v20=v0(v3(v31,1,1));return "";else local v69=v2(v0(v31,16));if v20 then local v79=v5(v69,v20);v20=nil;return v79;else return v69;end end end);v18=1;end if (v18==2) then v22=function()local v39=v1(v16,v19,v19);v19=v19 + 1 ;return v39;end;v23=nil;v23=function()local v40,v41=v1(v16,v19,v19 + (1007 -(752 + 253)) );v19=v19 + (1202 -(332 + 868)) ;return (v41 * (2147 -(302 + 1589))) + v40 ;end;v18=3;end if (v18==6) then v29=nil;v29=function()local v42=0;local v43;local v44;local v45;local v46;local v47;local v48;local v49;while true do if (v42==(1 + 0)) then local v73=0;while true do if (v73~=(479 -(309 + 169))) then else v42=232 -(187 + 43) ;break;end if (v73~=0) then else v45=nil;v46=nil;v73=1 + 0 ;end end end if (v42==(3 + 0)) then v49=nil;while true do local v80=0;local v81;while true do if (v80~=0) then else v81=205 -(138 + 67) ;while true do if ((225 -(23 + 202))==v81) then local v107=0;while true do if (v107~=(1 + 0)) then else v81=1;break;end if (v107~=(0 -0)) then else if (v43==0) then local v114=0;local v115;while true do if (v114~=0) then else v115=0 -0 ;while true do if (v115==1) then v46={};v43=446 -(443 + 2) ;break;end if ((0 -0)==v115) then local v125=0 -0 ;local v126;while true do if (v125==0) then v126=0;while true do if (v126~=1) then else v115=1;break;end if (v126==0) then v44={};v45={};v126=1;end end break;end end end end break;end end end if (v43~=2) then else local v116=0;local v117;local v118;while true do if (v116==(0 -0)) then v117=1249 -(424 + 825) ;v118=nil;v116=1 -0 ;end if (v116==1) then while true do if (v117==0) then v118=0;while true do if (v118~=1) then else for v264=1,v24() do local v265=0 -0 ;local v266;local v267;while true do if ((943 -(670 + 273))==v265) then v266=0 -0 ;v267=nil;v265=1;end if (1==v265) then while true do if (v266~=0) then else v267=v22();if (v21(v267,1,1182 -(23 + 1158) )~=0) then else local v358=0;local v359;local v360;local v361;local v362;local v363;while true do if (v358==1) then v361=nil;v362=nil;v358=6 -4 ;end if (v358==(4 -2)) then v363=nil;while true do if (v359==(0 -0)) then local v423=521 -(153 + 368) ;while true do if (0==v423) then v360=0;v361=nil;v423=2 -1 ;end if ((1950 -(1761 + 188))==v423) then v359=561 -(166 + 394) ;break;end end end if (v359==(309 -(189 + 118))) then while true do if (v360==1) then local v451=0 + 0 ;local v452;while true do if (v451~=(0 -0)) then else v452=565 -(238 + 327) ;while true do if (v452~=0) then else local v473=1842 -(439 + 1403) ;while true do if (v473==(2 -1)) then v452=1;break;end if (v473==0) then v363={v23(),v23(),nil,nil};if (v361==(0 + 0)) then local v478=0;local v479;local v480;while true do if (v478==(0 + 0)) then v479=0;v480=nil;v478=1;end if (v478~=(128 -(38 + 89))) then else while true do if (0~=v479) then else v480=0;while true do if (v480==0) then v363[3]=v23();v363[4]=v23();break;end end break;end end break;end end elseif (v361==(1664 -(818 + 845))) then v363[3 + 0 ]=v24();elseif (v361==2) then v363[3]=v24() -((230 -(68 + 160))^16) ;elseif (v361~=3) then else local v483=805 -(160 + 645) ;local v484;local v485;while true do if (v483~=(0 + 0)) then else v484=0 -0 ;v485=nil;v483=1 + 0 ;end if (v483==1) then while true do if (0==v484) then v485=0 + 0 ;while true do if (v485~=(0 -0)) then else v363[6 -3 ]=v24() -((4 -2)^16) ;v363[1921 -(256 + 1661) ]=v23();break;end end break;end end break;end end end v473=1572 -(1468 + 103) ;end end end if (v452==1) then v360=168 -(54 + 112) ;break;end end break;end end end if ((0 -0)==v360) then local v453=0;while true do if (v453~=(1843 -(1178 + 664))) then else v360=2 -1 ;break;end if (v453==(0 -0)) then v361=v21(v267,26 -(19 + 5) ,3);v362=v21(v267,7 -3 ,8 -2 );v453=1 + 0 ;end end end if (v360==2) then local v454=1384 -(820 + 564) ;while true do if (v454==1) then v360=3;break;end if (v454==0) then if (v21(v362,1,1 -0 )==(2 -1)) then v363[1 + 1 ]=v49[v363[2]];end if (v21(v362,1 + 1 ,2 + 0 )~=1) then else v363[8 -5 ]=v49[v363[3]];end v454=293 -(262 + 30) ;end end end if (v360~=3) then else if (v21(v362,5 -2 ,3)==(690 -(658 + 31))) then v363[4 + 0 ]=v49[v363[4]];end v44[v264]=v363;break;end end break;end if (v359~=1) then else local v424=0;while true do if (v424~=(0 -0)) then else v362=nil;v363=nil;v424=93 -(56 + 36) ;end if (v424==(4 -3)) then v359=2;break;end end end end break;end if (v358~=(1113 -(949 + 164))) then else v359=0;v360=nil;v358=2 -1 ;end end end break;end end break;end end end v43=800 -(492 + 305) ;break;end if (v118~=0) then else local v169=0 + 0 ;while true do if (v169~=1) then else v118=1;break;end if (0==v169) then for v280=1,v48 do local v281=0;local v282;local v283;while true do if (v281~=(3 -2)) then else if (v282==1) then v283=v22()~=0 ;elseif (v282==2) then v283=v25();elseif (v282==3) then v283=v26();end v49[v280]=v283;break;end if (v281~=(0 + 0)) then else local v326=0 -0 ;while true do if (v326==(1 -0)) then v281=1 + 0 ;break;end if (v326==0) then v282=v22();v283=nil;v326=1;end end end end end v47[8 -5 ]=v22();v169=1007 -(128 + 878) ;end end end end break;end end break;end end end v107=1 + 0 ;end end end if (v81==1) then if (v43==1) then local v108=0 -0 ;local v109;local v110;while true do if (v108==1) then while true do if (v109==0) then v110=0;while true do if (v110==1) then v49={};v43=1872 -(398 + 1472) ;break;end if ((0 -0)==v110) then local v127=0 -0 ;while true do if (v127==1) then v110=1 + 0 ;break;end if (v127==(0 + 0)) then v47={v44,v45,nil,v46};v48=v24();v127=1 + 0 ;end end end end break;end end break;end if (v108~=0) then else v109=0 + 0 ;v110=nil;v108=1309 -(906 + 402) ;end end end if (v43~=(1928 -(225 + 1700))) then else local v111=0;local v112;while true do if ((0 + 0)~=v111) then else v112=1245 -(756 + 489) ;while true do if (v112==(0 + 0)) then for v121=1 -0 ,v24() do v45[v121-(1 + 0) ]=v29();end for v123=1,v24() do v46[v123]=v24();end v112=1;end if (v112==1) then return v47;end end break;end end end break;end end break;end end end break;end if (2==v42) then local v74=1521 -(666 + 855) ;while true do if (v74==0) then v47=nil;v48=nil;v74=1976 -(627 + 1348) ;end if ((1 + 0)==v74) then v42=350 -(254 + 93) ;break;end end end if (v42~=(0 -0)) then else local v75=0;while true do if (v75==0) then v43=0 + 0 ;v44=nil;v75=1 + 0 ;end if (v75==1) then v42=1;break;end end end end end;v30=nil;v18=7;end if (v18==5) then v27=v24;v28=nil;v28=function(...)return {...},v12("#",...);end;v18=6;end if (v18==4) then v25=function()local v50=v24();local v51=v24();local v52=1 + 0 ;local v53=(v21(v51,2 -1 ,588 -(33 + 535) ) * (2^(96 -64))) + v50 ;local v54=v21(v51,49 -28 ,26 + 5 );local v55=((v21(v51,(1439 -(1168 + 180)) -59 )==(926 -(380 + 545))) and  -(1 + 0 + 0)) or (1 + 0) ;if (v54==(0 + 0 + 0)) then if (v53==(0 + (320 -(158 + 162)))) then return v55 * (0 -0) ;else local v82=0 -0 ;while true do if (v82==(213 -(51 + 90 + 72))) then v54=1322 -((1284 -(33 + 446)) + 516) ;v52=0 -0 ;break;end end end elseif (v54==(3306 -(1202 + 57))) then return ((v53==(0 + (602 -(390 + 212)))) and (v55 * ((1 + 0)/(1940 -(97 + 1843))))) or (v55 * NaN) ;end return v8(v55,v54-(54 + 969) ) * (v52 + (v53/((1859 -(144 + 1713))^(662 -(373 + 237))))) ;end;v26=nil;v26=function(v32)local v56;if  not v32 then v32=v24();if (v32==(0 -0)) then return "";end end v56=v3(v16,v19,(v19 + v32) -(1332 -(25 + 1306)) );v19=v19 + v32 ;local v57={};for v67=1588 -(1077 + 510) , #v56 do v57[v67]=v2(v1(v3(v56,v67,v67)));end return v6(v57);end;v18=5;end if (v18==1) then v21=nil;v21=function(v33,v34,v35)if v35 then local v70=0 -0 ;local v71;while true do if (v70==0) then v71=(v33/((1843 -(1385 + 456))^(v34-(744 -(547 + 196)))))%((1 + 1)^(((v35-(57 -(15 + 19 + 22))) -(v34-((1041 + 74) -((313 -110) + 911)))) + (4 -3))) ;return v71-(v71%1) ;end end else local v72=(2 + 0 + 0)^(v34-(2 -1)) ;return (((v33%(v72 + v72))>=v72) and (1 -0)) or (343 -(292 + 51)) ;end end;v22=nil;v18=2;end if (v18==3) then v24=nil;v24=function()local v58=0 + 0 ;local v59;local v60;local v61;local v62;while true do if (v58==(0 -0)) then v59,v60,v61,v62=v1(v16,v19,v19 + 3 );v19=v19 + 4 ;v58=4 -(1 + 2) ;end if (v58==(1 + (0 -0))) then return (v62 * (37526662 -20749446)) + (v61 * (6607 + 58929)) + (v60 * (15 + 241)) + v59 ;end end end;v25=nil;v18=4;end if (v18==7) then v30=function(v36,v37,v38)local v63=0;local v64;local v65;local v66;while true do if (0==v63) then v64=v36[1];v65=v36[2];v63=1;end if (v63==1) then v66=v36[3];return function(...)local v83=1;local v84= -1;local v85={...};local v86=v12("#",...) -1 ;local function v87()local v88=v64;local v89=v65;local v90=v66;local v91=v28;local v92={};local v93={};local v94={};for v98=0,v86 do if ((v98>=v90) or ((440 + 683)>3215)) then v92[v98-v90 ]=v85[v98 + 1 ];else v94[v98]=v85[v98 + (1820 -(1696 + 62 + 61)) ];end end local v95=(v86-v90) + 1 ;local v96;local v97;while true do local v99=730 -(590 + 140) ;local v100;while true do if ((v99==(0 -0)) or ((7823 -4621)<(737 + 1440))) then v100=0 -0 ;while true do if (((11 + 339)<=(517 + 2419)) and (v100==0)) then local v113=0 + 0 ;while true do if (((791 -(295 + 309 + 186))==v113) or (1445>=2092)) then v100=740 -(646 + (1257 -(1073 + 91))) ;break;end if ((v113==(0 -0)) or ((3206 + 166)<=(3341 -(69 + 86)))) then v96=v88[v83];v97=v96[2 -1 ];v113=1 + 0 ;end end end if (((64 + 2120)>=(871 -455)) and (v100==(1 + 0))) then if ((2640<3610) and (v97<=(1618 -(1279 + 314)))) then if (((3699 -((956 -(52 + 10)) + 216))>(1139 + 1181)) and (v97<=(32 -20))) then if ((v97<=(737 -(548 + (545 -361)))) or ((2596 + 2237)<=(7639 -5160))) then if ((v97<=(379 -(10 + 367))) or ((1182 + 1848)==3768)) then if (((6549 -4905)>=634) and (v97<=(0 + 0))) then v38[v96[5 -2 ]]=v94[v96[1 + 1 ]];elseif ((v97>1) or ((4023 -(357 + 1479))==(752 + 585))) then local v170=1068 -(201 + (1915 -(942 + 106))) ;local v171;local v172;while true do if (((1474 -(201 + 28))==(484 + (2220 -(676 + 783)))) and (v170==(0 + 0))) then v171=0;v172=nil;v170=1 + (0 -0) ;end if (((3474 -2714)==((8061 -5357) -(350 + 1594))) and (v170==(1 + 0))) then while true do if ((v171==(0 + 0)) or ((1970 -((652 -(410 + 4)) + 1243))>=3010)) then v172=v96[1913 -(1649 + 262) ];v94[v172]=v94[v172](v13(v94,v172 + (1 -0) ,v84));break;end end break;end end else v94[v96[2 + (0 -0) ]]={};end elseif ((4687>=(1041 + 89)) and (v97<=(1 + 2))) then local v130=0 + 0 + 0 ;local v131;local v132;local v133;while true do if (((0 + 0)==v130) or (1704>=4843)) then v131=1950 -(1599 + 351) ;v132=nil;v130=(688 -(344 + 343)) -0 ;end if ((v130==(4 -3)) or (((6079 -(9 + 927)) -(74 + 866 + 460))==599)) then v133=nil;while true do if (((551 + 685)<(1950 -(310 + 55))) and (v131==((338 -(152 + 186)) + 0))) then local v284=0 -0 ;while true do if ((2243<=(1051 + 1515)) and ((1036 -(255 + 780))==v284)) then v131=1 + 0 ;break;end if ((v284==(0 + 0)) or ((3964 -2153)>(5222 -(30 + (2841 -(169 + 1489)))))) then v132=v96[2 + 0 ];v133=v94[v96[421 -((469 -223) + (2139 -(1776 + 191))) ]];v284=1;end end end if (((18327 -(57193 -42998))>=(3327 -1424)) and (v131==(1 + 0))) then v94[v132 + (1556 -(220 + 1335)) ]=v133;v94[v132]=v133[v96[4]];break;end end break;end end elseif ((v97>(429 -(346 + 79))) or ((47 + 399)>(5082 -(3309 -(9 + 1))))) then local v174=487 -((619 -(330 + 224)) + 422) ;local v175;local v176;local v177;local v178;local v179;local v180;local v181;while true do if ((v174==(1311 -((1628 -505) + 187))) or (((1339 + 2107) -(1482 + 99))==(3389 -(615 + (2819 -1707))))) then v177=nil;v178=nil;v174=4 -2 ;end if ((v174==(76 -(73 + 3))) or (3760>=4429)) then v175=(0 -0) + (0 -0) ;v176=nil;v174=1 + 0 ;end if (((436 + 125)==(1729 -(405 + 763))) and (v174==(1134 -((2480 -(1124 + 722)) + 497)))) then v181=nil;while true do if ((v175==(2 + (0 -0))) or (3241<=(478 + 906))) then local v303=0 + 0 ;while true do if ((v303==(1 + (0 -0))) or ((2397 -(240 + 1304))==(1379 + 2415))) then v175=6 -3 ;break;end if ((v303==0) or (((2780 + 1776) -(42 + 154))<=(84 + 297))) then v180=nil;v181=nil;v303=(136 -(117 + 18)) -(0 + 0) ;end end end if ((v175==(1 + 0)) or ((5235 -(1589 + 252))>=(3994 + 846))) then v178=nil;v179=nil;v175=2;end if ((v175==(1209 -(453 + 756))) or ((4739 -2899)==(2800 + 1565 + 34))) then local v304=0;while true do if (((3967 -(492 + 385))<(6031 -(579 + 26 + 779))) and (v304==(0 + 0))) then v176=0;v177=nil;v304=4 -3 ;end if ((2956==(9179 -6223)) and (v304==(1 -0))) then v175=1 -0 ;break;end end end if ((v175==(214 -(69 + 142))) or (((1173 -(681 + 243)) -((57 -25) + 101 + 27))>=1175)) then while true do if (((6159 -(546 + 878))>(2240 -(2339 -(188 + 1034)))) and (v176==(2 + 1))) then if ((2142>=(2348 -(245 + 91 + 108))) and v181) then local v394=0 -0 ;local v395;local v396;while true do if (((5696 -(1804 + 64))>(1276 -823)) and (v394==(1077 -(371 + 40 + 666)))) then v395=553 -(214 + 339) ;v396=nil;v394=1974 -(1226 + 747) ;end if ((v394==(1 + 0)) or ((7997 -4819)>=(10928 -7097))) then while true do if ((1233<(1671 + 69)) and (v395==(1440 -((1416 -(970 + 109)) + 1103)))) then v396=0 -0 ;while true do if ((v396==(484 -(382 + 102))) or ((1740 -697)>(4377 -3259))) then v94[v179]=v181;v83=v96[1 + 2 ];break;end end break;end end break;end end else v83=v83 + (1 -0) ;end break;end if ((2208<=(4002 -(359 + 145))) and ((938 -(323 + 613))==v176)) then local v364=0 -0 ;local v365;while true do if ((2103<=4177) and (v364==(0 + 0))) then v365=310 -(119 + 191) ;while true do if (((24 + 991)==(1351 -(237 + 99))) and (v365==(0 -0))) then for v435=1 -(1902 -(1676 + 226)) ,v178 do v94[v179 + v435 ]=v180[v435];end v181=v180[2 -1 ];v365=2 -1 ;end if ((3731>(8693 -5023)) and (v365==(1 -0))) then v176=826 -(257 + 566) ;break;end end break;end end end if (((1 + 0)==v176) or ((1912 + 1252)>(11170 -7425))) then local v366=0 + 0 ;local v367;while true do if (((1084 -689)<(2464 -(361 + 690))) and (v366==((1729 -(251 + 1478)) + 0))) then v367=1448 -(947 + 501) ;while true do if ((v367==(1 + 0)) or ((3863 -2599)<=1100)) then v176=4 -2 ;break;end if ((((11309 -7268) -((1492 -(206 + 1158)) + 1826))==(14 + 91 + 1982)) and (v367==(0 -0))) then local v426=0;while true do if ((4819>=(117 + 374)) and (v426==1)) then v367=1716 -(944 + 771) ;break;end if (((3704 -2357)==(491 + 856)) and (v426==(1351 -(420 + 931)))) then v179=v177 + (1260 -(696 + 374 + 188)) ;v180={v94[v177](v94[v177 + 1 + (0 -0) ],v94[v179])};v426=1 + 0 + 0 ;end end end end break;end end end if ((v176==(0 + (0 -0))) or ((848 + 621)>=(4022 -(407 + 550)))) then local v368=0;while true do if ((v368==((1 + 2) -2)) or (3025<=2980)) then v176=1 + 0 ;break;end if ((v368==(0 -0)) or ((150 + 214)==(3763 -(1433 + 137)))) then local v399=0;while true do if (((60 + 284)==(2199 -(1771 + 84))) and (v399==(1 + 0))) then v368=1 -0 ;break;end if ((v399==((422 -(307 + 115)) -0)) or ((1027 + 1016)>=(4391 + 121))) then v177=v96[34 -(24 + 8) ];v178=v96[4 + 0 ];v399=1411 -(1384 + 26) ;end end end end end end break;end end break;end if (((578 -(169 + 407))==v174) or ((5221 -(461 + 662 + 604))<(3913 -(1403 + 112)))) then v179=nil;v180=nil;v174=7 -4 ;end end else v94[v96[4 -(5 -3) ]]=v96[1 + 2 ]~=0 ;end elseif (((1719 -(664 + 10))<=(2473 -(134 + 393))) and (v97<=8)) then if ((v97<=(12 -6)) or ((2503 + 634)<=1489)) then if ((((19 -8) -5)<(543 + 2246)) and (v96[2]==v94[v96[4]])) then v83=v83 + (997 -(839 + 157)) ;else v83=v96[(10 -6) -1 ];end elseif (((3176 -(714 + 50))==2412) and (v97>(3 + 4))) then v94[v96[1308 -(937 + 369) ]]=v38[v96[3]];else local v186=0 + 0 ;local v187;local v188;local v189;local v190;while true do if ((v186==((3177 -2125) -(956 + 95))) or (1857<((1036 -536) + 914))) then v189=nil;v190=nil;v186=1 + 1 ;end if ((139<=(3138 + 572)) and (v186==(5 -3))) then while true do if ((v187==(1652 -(783 + 867))) or ((5218 -(111 + 141))<=(12542 -8004))) then for v329=(558 -164) -(73 + 320) ,v96[1 + 3 ] do local v330=0 + 0 ;local v331;while true do if (((1071 + 90 + 942)>=(946 -(329 + 205))) and (v330==0)) then v83=v83 + (925 -(244 + 680)) ;v331=v88[v83];v330=1 -0 ;end if ((v330==1) or ((599 + 4343)<((284 + 5177) -(501 + 450 + 161)))) then if ((v331[1 + 0 ]==49) or ((3671 -(251 + 1191))==(1531 -(659 + 209)))) then v190[v329-(1 -0) ]={v94,v331[3]};else v190[v329-(1 + 0) ]={v37,v331[10 -7 ]};end v93[ #v93 + (1253 -(927 + 325)) ]=v190;break;end end end v94[v96[2]]=v30(v188,v189,v38);break;end if ((v187==(1 -0)) or ((134 + 109)>3420)) then local v306=0 -(0 + 0) ;local v307;while true do if ((v306==(0 -0)) or ((1493 -(48 + 442))>=(4903 -(584 + 161)))) then v307=0;while true do if ((v307==(0 + 0)) or ((640 + (1090 -(686 + 384)))>=960)) then local v402=0 -0 ;while true do if (((1521 -((1298 -(138 + 395)) + 756))==v402) or ((2634 + 482)>(980 + 3294))) then v190={};v189=v10({},{__index=function(v429,v430)local v438=0 -0 ;local v439;local v440;while true do if ((v438==0) or ((486 + 175 + 922)==(11592 -8911))) then v439=868 -(866 + 2) ;v440=nil;v438=1144 -(450 + 693) ;end if (((2093 + 2431)>3900) and ((1 + 0 + 0)==v438)) then while true do if (((3498 -(807 + 325))<(4421 -(14 + 88))) and (v439==((152 -(125 + 27)) + 0))) then local v465=1065 -(535 + 530) ;while true do if ((v465==0) or ((2613 -(504 + (919 -322)))==(3473 -2043))) then v440=v190[v430];return v440[1 -0 ][v440[1685 -(678 + 1005) ]];end end end end break;end end end,__newindex=function(v429,v430,v431)local v441=(0 -0) + 0 ;local v442;while true do if ((v441==0) or ((3574 -(424 + 291))<=(3165 -(363 + 291)))) then v442=v190[v430];v442[1][v442[2 + 0 + (0 -0) ]]=v431;break;end end end});v402=(313 + 949) -(219 + 1042) ;end if (((1279 -(60 + 4))<=(4388 -(472 + 1140))) and (1==v402)) then v307=1 -0 ;break;end end end if (((1214 + 2474)>(5964 -3256)) and (v307==((1810 -(821 + 986)) -2))) then v187=4 -(679 -(5 + 672)) ;break;end end break;end end end if (((16347 -11768)<(4159 + 566)) and (v187==(0 -0))) then local v308=328 -(77 + 251) ;while true do if ((v308==((1669 -(518 + 1151)) + 0)) or (1818==(6530 -3034))) then v188=v89[v96[3]];v189=nil;v308=1 + 0 ;end if ((v308==1) or (((2498 -1011) -(562 + 35))<=(2098 -(689 + 1185)))) then v187=1393 -(1257 + 135) ;break;end end end end break;end if (((11943 -8943)>((9939 -(230 + 992)) -5801)) and (0==v186)) then local v277=1421 -(1133 + 288) ;while true do if ((2805>(3100 -1360)) and (v277==1)) then v186=1 -0 ;break;end if ((v277==(0 -(237 -(198 + 39)))) or ((2275 + (1386 -597))>3676)) then v187=0;v188=nil;v277=2 -1 ;end end end end end elseif ((v97<=((65 -47) -8)) or ((3185 -1022)==(9881 -6083))) then if ((v97>9) or (3257<(427 + 557))) then if ((v94[v96[1 + 1 ]]~=v96[4]) or ((136 + 1061)<=(1338 -789))) then v83=v83 + (1 -0) ;else v83=v96[922 -(486 + 433) ];end else local v191=0;local v192;local v193;local v194;local v195;while true do if ((v191==(0 + 0)) or (3184==250)) then v192=0 + 0 ;v193=nil;v191=1;end if ((910<(15503 -10914)) and (v191==(1499 -(841 + 656)))) then while true do if (((3956 -(173 + 525))>(1748 -(796 + 941))) and (v192==(1400 -(1272 + 126)))) then if (((41 -18)<(82 + 1119)) and (v194>(1091 -(927 + 164)))) then if ((((9980 -(608 + 555)) -6797)<=(21954 -17488)) and (v195<=v94[v193 + (696 -(415 + 280)) ])) then local v385=0;local v386;while true do if ((335<=(3347 -2217)) and (v385==(0 -0))) then v386=0 + 0 ;while true do if ((v386==(0 -0)) or ((3175 + 186)>=(3431 + (413 -121)))) then v83=v96[2 + 1 ];v94[v193 + 3 + 0 ]=v195;break;end end break;end end end elseif ((v195>=v94[v193 + 1 + 0 ]) or ((3087 -(1546 -925))>4589)) then local v387=1285 -(464 + 821) ;local v388;while true do if (((3557 -(569 + 322))>=(228 + 30)) and (v387==(0 -0))) then v388=0 -0 ;while true do if ((v388==(0 -0)) or ((3148 -(21 + 263))==(1359 + 3328))) then v83=v96[3 + 0 ];v94[v193 + (1502 -(409 + 1090)) ]=v195;break;end end break;end end end break;end if ((v192==((0 -0) -0)) or ((3312 -(82 + 677))<=(1437 -877))) then v193=v96[431 -(71 + 358) ];v194=v94[v193 + ((55 + 6) -(10 + 49)) ];v192=1;end if (((1821 -(283 + (2080 -(1602 + 217))))<=(2789 -(63 + 1278))) and (v192==((100 + 331) -(290 + 140)))) then local v311=0 -0 ;while true do if (((1836 -(496 + 315))<2128) and (v311==(1 -0))) then v192=7 -5 ;break;end if (((326 -181)<1617) and (v311==(761 -(634 + 127)))) then v195=v94[v193] + v194 ;v94[v193]=v195;v311=1 + 0 ;end end end end break;end if ((v191==((1820 + 35) -(1757 + 97))) or (4436<=(999 + 36 + 706))) then v194=nil;v195=nil;v191=1225 -(879 + 344) ;end end end elseif (((1869 + 2450)>((944 + 3115) -2580)) and (v97>((299 -192) -(79 + 17)))) then v94[v96[4 -2 ]]=v94[v96[827 -(400 + 424) ]]%v94[v96[1 + 3 ]] ;else local v197=0;local v198;local v199;while true do if (((5541 -(143 + 1142))==4256) and (v197==(0 -0))) then v198=0 + 0 ;v199=nil;v197=861 -(367 + 493) ;end if ((v197==1) or (876>=(2256 -(1176 + 185)))) then while true do if ((v198==(0 + 0)) or (3249<=(3381 -1620))) then local v312=0;while true do if ((((5431 -(514 + 877)) -2448)<(1169 + 1171)) and (v312==(1194 -(792 + 401)))) then v198=1 + 0 ;break;end if ((((0 -0) + 0)==v312) or ((6739 -4137)>=(8052 -4344))) then v199=v96[4 -2 ];v84=(v199 + v95) -(1 + 0) ;v312=1 + 0 ;end end end if (((1347 -(867 + 252))<(156 + (4204 -(747 + 891)))) and (v198==(1 + 0))) then for v332=v199,v84 do local v333=0 -0 ;local v334;local v335;local v336;while true do if ((v333==0) or ((5497 -((1482 -(573 + 333)) + 176))==(10081 -(19136 -12834)))) then v334=0;v335=nil;v333=780 -(493 + 286) ;end if ((v333==(2 -1)) or ((2386 -(960 + 351))>(1372 + 2885))) then v336=nil;while true do if (((2256 + 943)>(597 + 2489)) and (v334==(1791 -(978 + 812)))) then while true do if ((v335==(0 + 0)) or ((766 -(54 + 107))>(1813 + 660))) then v336=v92[v332-v199 ];v94[v332]=v336;break;end end break;end if ((2<=1458) and (v334==(0 -0))) then local v406=0 -0 ;while true do if (((621 + 554)<(9510 -4844)) and ((0 + 0)==v406)) then v335=0 -0 ;v336=nil;v406=1 + 0 ;end if ((v406==(1 -0)) or (4820==(820 -(522 + 234)))) then v334=1 + 0 ;break;end end end end break;end end end break;end end break;end end end elseif ((v97<=18) or ((1769 + 443)>(17663 -13620))) then if (((1686 + 623)>((355 + 116) -(58 + 50))) and (v97<=(11 + 4))) then if ((v97<=(1433 -(875 + 545))) or ((85 + 254)>(3466 -(651 + 798)))) then local v134=0 + 0 ;local v135;local v136;while true do if ((v134==(1 -(0 + 0))) or ((270 + 980)>(9748 -5679))) then while true do if (((4703 -(399 + 1286))<=4218) and (v135==(0 + 0))) then v136=v96[2 + 0 ];v94[v136](v13(v94,v136 + 1 ,v84));break;end end break;end if ((901<(99 + (987 -(51 + 29)))) and (v134==(0 -0))) then v135=0 + 0 ;v136=nil;v134=1 + (968 -(236 + 732)) ;end end elseif ((677<=(3395 -(475 + 1457))) and (v97==14)) then if (((1399 -827)<(5755 -3613)) and (v94[v96[(1276 -(535 + 736)) -3 ]]==v94[v96[1 + 3 ]])) then v83=v83 + 1 ;else v83=v96[4 -(465 -(126 + 338)) ];end elseif (((4333 + 154)==(6150 -((3883 -2912) + 692))) and (v94[v96[(381 + 200) -(460 + 119) ]]==v96[1 + 3 ])) then v83=v83 + 1 ;else v83=v96[3 + 0 ];end elseif (((255 + 1583)>=(473 + 1256)) and (v97<=(58 -(28 + 14)))) then local v137=(0 + 0) -(0 -0) ;local v138;local v139;local v140;while true do if ((v137==((4 -3) -0)) or ((4510 -(147 + 126))==(236 + 244))) then v140=nil;while true do if (((9219 -5065)==4154) and (v138==(0 + 0))) then v139=0;v140=nil;v138=1;end if (((6260 -(1287 + 183))>=781) and (v138==(1 -0))) then while true do if (((5704 -1905)>=(1655 + 488)) and (v139==((230 -(139 + 91)) -0))) then v140=v96[292 -(42 + 248) ];v94[v140]=v94[v140](v13(v94,v140 + (3 -2) + 0 ,v96[3 + 0 ]));break;end end break;end end break;end if (((3354 + 595)>=(2451 + 279)) and (v137==(0 + 0))) then v138=0 -0 ;v139=nil;v137=1;end end elseif (((15814 -12647)>=(267 + 551 + 2103)) and (v97==(37 -20))) then if ((v94[v96[2 + 0 ]]~=v94[v96[5 -1 ]]) or ((992 + 1740)==(75 + 1400))) then v83=v83 + 1 + 0 ;else v83=v96[856 -(609 + 244) ];end else v94[v96[4 -2 ]]=v37[v96[3]];end elseif ((v97<=21) or ((966 + 277)>(1039 + 2299))) then if ((522<3807) and (v97<=(15 + 4))) then local v141=0;local v142;local v143;local v144;local v145;local v146;local v147;while true do if (((5467 -(347 + 912))>=(3406 -(1677 + 275))) and (v141==(5 -3))) then v146=nil;v147=nil;v141=1678 -(624 + 1051) ;end if (((455 + 995)<=(837 + 3073)) and (v141==(515 -(427 + 85)))) then while true do if ((377<=(1145 -(287 + 240))) and ((1 + 1)==v142)) then v147=nil;while true do if ((((12170 -6759) -2248)>2571) and (v143==0)) then local v339=1397 -((1139 -(390 + 686)) + 1334) ;local v340;while true do if ((v339==((4390 -3033) -(9 + 1348))) or ((3092 -(904 + 39))==(3582 -(943 + 43)))) then v340=0;while true do if ((v340==(0 + 0)) or ((5446 -(894 + 55))==(5048 -(1859 + 129)))) then v144=v96[2];v145,v146=v91(v94[v144](v94[v144 + 1 ]));v340=3 -2 ;end if ((v340==(1782 -(1262 + 519))) or ((8164 -3769)==(6224 -4130))) then v143=1 + 0 ;break;end end break;end end end if (((510 + 2115)<(6657 -((1554 -(21 + 52)) + (1731 -1246)))) and (v143==(9 -7))) then for v355=v144,v84 do local v356=0 + 0 ;local v357;while true do if ((v356==(0 -0)) or ((443 + 792 + 627)<(215 + 1452))) then v357=0;while true do if ((v357==(62 -(44 + 18))) or ((5122 -3637)>=(3292 + 216))) then v147=v147 + (163 -(34 + 128)) ;v94[v355]=v145[v147];break;end end break;end end end break;end if ((v143==(904 -(393 + 510))) or ((5161 -(43 + 1122))==((5517 -(175 + 381)) -((60 -37) + 193 + 114)))) then local v341=411 -(371 + 40) ;local v342;while true do if ((v341==(0 + 0)) or ((5734 -(824 + 733))<(402 + 910 + 4))) then v342=1910 -(223 + 1687) ;while true do if (((6056 -2350)>=((341 -156) + 352)) and (v342==(0 + 0))) then v84=(v146 + v144) -1 ;v147=394 -(209 + 185) ;v342=1 + 0 ;end if (((1 + 0 + 0)==v342) or ((440 + 2369)>=((3305 -(32 + 161)) + 1234))) then v143=2;break;end end break;end end end end break;end if ((4631>((589 + 1852) -1785)) and ((688 -(77 + 610))==v142)) then local v289=(2462 -(35 + 1215)) -(91 + 750 + 371) ;while true do if ((v289==(1643 -(477 + 1166))) or (1857<=608)) then v145=nil;v146=nil;v289=1;end if ((v289==(1 + 0)) or ((1991 + 1009)==(3790 -2260))) then v142=2;break;end end end if ((v142==(1800 -(1472 + 328))) or ((458 + (4701 -(103 + 722)))>(10691 -5835))) then local v290=0 + 0 ;while true do if ((v290==(1 + 0)) or ((2394 -(635 + 377))>(17790 -14057))) then v142=1;break;end if ((v290==(0 + 0)) or ((2943 -(135 + 125 + 1014))>(1173 + 1212))) then v143=1466 -(993 + (956 -(11 + 472))) ;v144=nil;v290=1339 -((2836 -2221) + 723) ;end end end end break;end if ((3627>=(280 + 1031)) and (v141==0)) then v142=0 + 0 ;v143=nil;v141=935 -(755 + 179) ;end if ((v141==(4 -3)) or ((927 -(93 + 78))==(2105 -(3916 -2494)))) then v144=nil;v145=nil;v141=(1398 -(507 + 889)) + (948 -(901 + 47)) ;end end elseif ((v97>(527 -(111 + 396))) or ((10874 -6753)<(2336 -485))) then v94[v96[2]]=v94[v96[3 + 0 ]]%v96[3 + 1 ] ;else v94[v96[1 + 1 ]]=v30(v89[v96[11 -8 ]],nil,v38);end elseif (((345 + 739)>=(1526 -(662 + 321))) and (v97<=(89 -66))) then if (((4296 -997)>1101) and (v97==(1146 -(662 + 462)))) then do return;end else local v204=0 -(0 -0) ;local v205;local v206;local v207;while true do if ((v204==(107 -(16 + 91))) or (3264>=(4511 -(117 + 845 + (1282 -(732 + 306)))))) then v205=0 -0 ;v206=nil;v204=(341 + 171) -(116 + (1554 -(822 + 337))) ;end if ((3766==(389 + 3377)) and (v204==1)) then v207=nil;while true do if (((3756 + 388)>(4896 -(1066 + 283))) and (v205==(1024 -(550 + (1840 -(80 + 1287)))))) then while true do if ((v206==(0 -0)) or ((1196 + 1071)>((18339 -(280 + 59)) -13373))) then v207=v96[1 + 1 ];do return v94[v207](v13(v94,v207 + (1 -0) + 0 ,v84));end break;end end break;end if ((v205==(1986 -(1281 + 705))) or ((101 + 2323)>=3940)) then local v313=(0 -0) -0 ;while true do if ((v313==(1584 -(819 + 764))) or (3164>4441)) then v205=226 -(70 + 155) ;break;end if ((v313==((769 -(501 + 268)) -(0 -0))) or ((2468 -(204 + 9))>=(13970 -9208))) then v206=1923 -(1688 + 235) ;v207=nil;v313=1;end end end end break;end end end elseif (((1375 + 1245)==(6604 -3984)) and (v97>(930 -(234 + 672)))) then local v208=0 + 0 ;local v209;local v210;local v211;local v212;local v213;while true do if ((4775>(4178 -(98 + 776 + 750))) and (v208==(1 + 0))) then local v278=675 -(627 + 48) ;while true do if (((240 + 39)<=(1552 -(711 + 132))) and (v278==0)) then v211=nil;v212=nil;v278=1438 -(1112 + 325) ;end if (((1 + 0)==v278) or ((5190 -3183)>(16314 -11470))) then v208=4 -(1490 -(1407 + 81)) ;break;end end end if (((6195 -(5398 -(460 + 552)))<=(61 + 3455)) and (v208==(1 + 1))) then v213=nil;while true do if ((v209==(1130 -(945 + 184))) or ((35 + 4525)==(4803 -((2167 -(20 + 1866)) + 769)))) then local v314=518 -(467 + 51) ;local v315;while true do if (((1119 + (568 -304))==(1110 + 273)) and (v314==(1230 -(19 + 1211)))) then v315=0 + 0 ;while true do if (((744 + 516)<(266 + 2990)) and (v315==((1733 -(335 + 1397)) + 0))) then v209=1 + 1 ;break;end if ((v315==(0 + 0)) or ((3195 -(306 + 69))<=(535 + 1985))) then v84=(v212 + v210) -(1 -0) ;v213=0;v315=2 -1 ;end end break;end end end if ((v209==0) or ((2164 + 480)>(16289 -11927))) then local v316=39 -(25 + 14) ;local v317;while true do if ((((6437 -2782) + 782)>=(1373 + 465)) and (v316==(0 -0))) then v317=140 -(98 + 42) ;while true do if (((6002 -(1457 + 81))>(934 + (4872 -(880 + 924)))) and (v317==(340 -(242 + 97)))) then v209=1 + 0 ;break;end if (((836 + 3393)>((7531 -(435 + 549)) -4195)) and ((0 -0)==v317)) then local v403=0 + 0 ;while true do if (((5366 -(42 + 1187))>(462 + (1806 -(1363 + 260)))) and (v403==(1177 -(991 + 185)))) then v317=1 + 0 ;break;end if (((100 -72)==(27 + 1)) and (v403==(0 + 0))) then v210=v96[1947 -(1483 + 462) ];v211,v212=v91(v94[v210]());v403=1;end end end end break;end end end if (((6 -4)==v209) or ((4425 -3181)==(3934 -(171 + 56)))) then for v343=v210,v84 do local v344=0 -0 ;while true do if (((5428 -(403 + 226))==(792 + 4007)) and (v344==(0 + 0))) then v213=v213 + (1482 -(369 + 1112)) ;v94[v343]=v211[v213];break;end end end break;end end break;end if ((v208==(0 -0)) or ((3119 -((655 -(276 + 374)) + 358))<((1688 -(436 + 586)) + 468))) then local v279=701 -(62 + (1685 -(72 + 974))) ;while true do if (((2128 + 309)>=(2227 -1217)) and ((1 + 0)==v279)) then v208=4 -3 ;break;end if ((3272<(13233 -8636)) and (v279==(0 + 0))) then v209=0;v210=nil;v279=670 -(132 + 537) ;end end end end else local v214=834 -(184 + 650) ;local v215;local v216;local v217;while true do if (((1684 -(848 + 836))==v214) or (3059>4069)) then v215=(1439 -415) -(568 + 456) ;v216=nil;v214=1781 -(1698 + 82) ;end if (((2737 -(148 + 347))>=(587 + 543)) and (v214==1)) then v217=nil;while true do if ((v215==(1 + 0)) or ((1744 -690)==(58 -28))) then for v345=(269 + 1669) -(170 + 1767) , #v93 do local v346=694 -(274 + 420) ;local v347;local v348;while true do if ((2750<2991) and (v346==(1614 -(1186 + 428)))) then v347=(0 + 0) -0 ;v348=nil;v346=974 -(52 + 921) ;end if (((2336 + 1018)<(2487 + 2422)) and ((3 -2)==v346)) then while true do if ((v347==(451 -(448 + 3))) or ((1045 -(55 + 27))<(127 + 62))) then v348=v93[v345];for v417=0 + 0 + 0 , #v348 do local v418=0 -0 ;local v419;local v420;local v421;local v422;while true do if (((10211 -5764)==(6111 -(1094 + 570))) and ((1185 -((1758 -796) + 222))==v418)) then v421=nil;v422=nil;v418=2;end if ((v418==(2 -0)) or ((1281 -801)<=(30 + 374))) then while true do if ((v419==(0 + (0 -0))) or (3867>=(5954 -(151 + 1266)))) then local v463=25 -(16 + 9) ;while true do if (((451 + 865)>(1689 -(524 + 1088))) and (v463==(0 -0))) then v420=v348[v417];v421=v420[(2 + 0) -1 ];v463=(5351 -3720) -(465 + 1165) ;end if (((8692 -4533)>=(1945 + 1935)) and (v463==(4 -(11 -8)))) then v419=1 -0 ;break;end end end if ((v419==(1323 -(158 + 1164))) or ((35 + 1122)>(2844 -(552 + 103)))) then v422=v420[2 -0 ];if ((4946>=(808 + 226)) and (v421==v94) and (v422>=v216)) then local v466=(2257 -(190 + 735)) -(107 + 1225) ;while true do if ((v466==(501 -(358 + 143))) or ((4247 -(1458 + 174))<=(2542 -1630))) then v217[v422]=v421[v422];v420[1 + 0 + 0 ]=v217;break;end end end break;end end break;end if (((12968 -8408)>(585 + (287 -(4 + 106)))) and ((0 + 0)==v418)) then v419=0 + 0 ;v420=nil;v418=669 -(457 + (1724 -(843 + 670))) ;end end end break;end end break;end end end break;end if ((v215==0) or ((12730 -8198)<(680 + 368))) then local v318=0 -0 ;while true do if ((v318==(0 + 0)) or (2433<=(4125 -(462 + 1295)))) then v216=v96[22 -(16 + 4) ];v217={};v318=1547 -(836 + 710) ;end if (((2921 -919)>=(1945 -486)) and (v318==(3 -2))) then v215=(2397 -(9 + 414)) -(1868 + 105) ;break;end end end end break;end end end elseif (((6453 -(1092 + 486))>2815) and (v97<=(1697 -(289 + 1370)))) then if ((v97<=(80 -49)) or (((11027 -(289 + 171)) -7188)<=(91 + (7538 -5194)))) then if (((591 + 565)<4938) and (v97<=(94 -66))) then if (((9858 -5857)<(6046 -(1451 + 132 + 72))) and (v97<=(21 + 5))) then local v148=(0 -0) -0 ;local v149;local v150;while true do if (((14091 -(14419 -5086))>=4498) and (1==v148)) then while true do if (((12451 -8756)==(1960 + 1735)) and (v149==((0 -0) -0))) then v150=v96[1 + 1 ];v94[v150](v13(v94,v150 + 1 + 0 ,v96[1881 -(1125 + 753) ]));break;end end break;end if ((v148==(1372 -(1238 + 134))) or ((3388 + 322)==(88 + 15))) then v149=0;v150=nil;v148=1;end end elseif (((576 + 652)<=(822 + 2198)) and (v97>((36 + 57) -66))) then v94[v96[1 + 1 ]][v96[2 + 1 ]]=v96[6 -(1 + 1) ];elseif (((3064 -((395 -277) + 320))<=(2377 + 485)) and  not v94[v96[175 -(6 + 167) ]]) then v83=v83 + ((882 + 647) -(1060 + 468)) ;else v83=v96[1176 -(686 + 487) ];end elseif ((2126>(172 + 641)) and (v97<=29)) then local v151=1090 -(233 + 857) ;local v152;local v153;while true do if ((3287>=(5860 -4653)) and (v151==(0 -0))) then v152=1925 -((2119 -(173 + 306)) + 285) ;v153=nil;v151=1 -0 ;end if (((2621 -(546 + (1622 -(831 + 136))))<(141 + 1558)) and (v151==(1 + 0))) then while true do if ((((6033 -3204) -(251 + 1149))<=(6597 -2441)) and (v152==(1033 -(364 + (2051 -(944 + 438)))))) then v153=v96[4 -2 ];do return v94[v153](v13(v94,v153 + 1 + 0 ,v96[(1 + 5) -3 ]));end break;end end break;end end elseif ((v97>(84 -54)) or ((2612 -1318)>(1567 + 1199))) then v94[v96[1 + 1 ]][v94[v96[1 + 2 ]]]=v94[v96[3 + 1 ]];else v94[v96[2]]=v94[v96[1 + 2 ]] -v96[6 -2 ] ;end elseif (((1938 + 325)<4549) and (v97<=(2 + 32))) then if ((v97<=(1 + 31)) or ((380 + 2270)==(2881 -(488 + 1101)))) then for v167=v96[2],v96[2 + 1 ] do v94[v167]=nil;end elseif (((9989 -5834)==(6055 -(1322 + 578))) and (v97>33)) then v94[v96[5 -3 ]]= #v94[v96[3]];else v94[v96[1 + 1 ]]=v94[v96[2 + (711 -(197 + 513)) ]][v96[3 + 1 ]];end elseif ((v97<=(54 -18)) or ((14511 -10124)==(4704 -(798 + 1084 + 76)))) then if ((((2886 -(369 + 1436)) + (2214 -(103 + 819)))>=(4502 -(11710 -9150))) and (v97>(1275 -(850 + 390)))) then local v226=(856 -292) -(259 + 305) ;local v227;local v228;local v229;local v230;while true do if (((797 -505)>(22 + 70)) and (v226==2)) then while true do if ((v227==(0 + 0)) or ((2379 + 2107)==(4941 -(1241 + 382)))) then v228=v96[2];v229={v94[v228](v13(v94,v228 + 1 ,v84))};v227=1 -0 ;end if ((v227==(781 -(276 + 236 + 268))) or ((1088 + (8178 -5931))>=(564 + 269 + (4207 -(386 + 1162))))) then v230=0;for v349=v228,v96[(1215 + 566) -(1087 + 690) ] do local v350=0 + 0 ;local v351;while true do if ((v350==(0 + 0)) or (2338>=(7980 -3496))) then v351=1991 -(1582 + 386 + 23) ;while true do if (((553 -((81 -(33 + 15)) + 48))<(1892 + 618)) and (((0 -0) + 0)==v351)) then v230=v230 + 1 + 0 ;v94[v349]=v229[v230];break;end end break;end end end break;end end break;end if ((((3283 + 7204) -8242)<=(8683 -4476)) and (1==v226)) then v229=nil;v230=nil;v226=4 -2 ;end if ((v226==(0 + 0)) or ((3226 -(551 + (698 -438)))<(52 + 1625))) then v227=908 -(827 + 81) ;v228=nil;v226=1 + 0 ;end end else local v231=1171 -(1098 + 73) ;local v232;local v233;while true do if ((v231==(1 + 0 + 0)) or ((3716 -(1472 + 33 + 7))>=(18287 -13361))) then while true do if (((3002 + 1033)>=2714) and (v232==((1902 -(353 + 1549)) + 0))) then v233=v96[8 -6 ];do return v13(v94,v233,v84);end break;end end break;end if ((v231==(1448 -(1228 + 220))) or ((56 -15)>=(1640 -(356 + 338)))) then v232=1862 -(1560 + 302) ;v233=nil;v231=(2438 -(337 + 465)) -(349 + 822 + 464) ;end end end elseif ((4206==(4858 -(241 + 411))) and (v97>(135 -98))) then if (((3875 -2136)>(1334 -910)) and v94[v96[1 + (1512 -(961 + 550)) ]]) then v83=v83 + 1 ;else v83=v96[3];end else v94[v96[4 -2 ]][v96[5 -(4 -2) ]]=v94[v96[19 -15 ]];end elseif (((9347 -5343)<(3418 + 1489)) and (v97<=(365 -(135 + 186)))) then if ((v97<=(2 + 39)) or (1034==(5235 -1800))) then if ((v97<=39) or ((2854 -(128 + 360))>=(835 + 3650))) then local v154=0;local v155;local v156;while true do if (((900 + 703)<(5731 -(289 + 826))) and (v154==(1 + 0))) then for v275=v155 + (1339 -(523 + 815)) ,v84 do v7(v156,v94[v275]);end break;end if (((6289 -1980)>=(6384 -2585)) and (0==v154)) then local v268=0 + 0 ;while true do if ((1738<=(5041 -2918)) and (v268==(0 + 0))) then v155=v96[2 + 0 ];v156=v94[v155];v268=1 + 0 ;end if ((1==v268) or ((337 + 595)>=(4345 + (493 -184)))) then v154=428 -(232 + 195) ;break;end end end end elseif ((4712<(6014 -(591 + 537))) and (v97==(1985 -(85 + 1860)))) then v94[v96[1 + 1 ]]();else v83=v96[3];end elseif (((308 + 664)<2680) and (v97<=(1826 -(783 + 1001)))) then local v157=0 + 0 ;local v158;local v159;local v160;while true do if (((2217 + 677 + 720)<=(4882 -(21 + 5))) and (v157==(896 -(25 + 870)))) then v160=nil;while true do if (((4184 -2500)==(2991 -(1209 + 98))) and (v158==(1 -0))) then while true do if ((v159==(0 -0)) or ((1204 + 1450)>(6232 -2499))) then v160=v96[2];v94[v160]=v94[v160](v94[v160 + (2 -1) ]);break;end end break;end if ((v158==(78 -(54 + 24))) or ((3582 -2339)>(969 + 1448))) then local v295=0 -0 ;while true do if ((v295==0) or ((3836 -(980 + 519))<=(2268 -(319 + 1201)))) then v159=0 -(1064 -(542 + 522)) ;v160=nil;v295=78 -(9 + 68) ;end if (((1028 -(407 + 23))<(166 + 2924)) and (1==v295)) then v158=1 + 0 ;break;end end end end break;end if ((v157==(1681 -(1135 + 546))) or ((3986 -(1030 + 432))==4994)) then v158=0 + 0 ;v159=nil;v157=1;end end elseif ((v97==43) or ((1233 + 628)>=3305)) then local v237=0 + 0 ;local v238;local v239;local v240;while true do if ((v237==0) or (4700<(10396 -7302))) then v238=1999 -(1550 + (830 -381)) ;v239=nil;v237=1 + 0 ;end if (((280 -122)<(1403 + 962)) and (v237==1)) then v240=nil;while true do if ((v238==(0 -0)) or ((2832 -(33 + 54))>=(4648 -(275 + 459 + 23)))) then local v321=1229 -(782 + 447) ;while true do if ((v321==(1 + 0)) or (3663>(4222 -(76 + 244)))) then v238=103 -(16 + 86) ;break;end if ((v321==(1921 -(1405 + 516))) or ((2321 + 1933)<(4384 -3184))) then v239=0 + 0 ;v240=nil;v321=3 -2 ;end end end if ((((487 + 5439) -(1143 + 217))==4566) and (v238==1)) then while true do if (((1275 -848)<=(930 -467)) and (v239==(0 -0))) then v240=v96[463 -(46 + 415) ];v94[v240](v94[v240 + (714 -(554 + 159)) ]);break;end end break;end end break;end end else v94[v96[1275 -((137 -64) + 1200) ]]=v96[548 -((634 -(302 + 236)) + 449) ];end elseif ((v97<=(27 + 20)) or ((4786 -(3782 -(201 + 637)))>=(6167 -(1602 + 346)))) then if (((5956 -(58 + 1880))>(1247 -(32 + (83 -53)))) and (v97<=(1366 -(1236 + 85)))) then local v161=0 -0 ;local v162;local v163;local v164;local v165;local v166;while true do if ((v161==(1892 -((919 -611) + 1583))) or (2353==(5008 -(445 + 1258)))) then v164=nil;v165=nil;v161=1224 -(959 + 263) ;end if ((v161==(0 + 0)) or ((15546 -12044)<=(2264 -796))) then v162=341 -(188 + (1425 -(250 + 1022))) ;v163=nil;v161=1;end if (((189 + 99 + 117)<=(1010 + 1168)) and (2==v161)) then v166=nil;while true do if (((1996 -(329 + 888))<1181) and (v162==(1297 -(103 + 1194)))) then local v296=444 -(135 + 54 + 255) ;while true do if (((1157 -343)==(1544 -(632 + 98))) and (v296==(1 + 0))) then v162=1;break;end if (((1461 -947)<(480 + 347)) and ((0 + 0 + 0)==v296)) then v163=v96[2];v164,v165=v91(v94[v163](v13(v94,v163 + 1 + 0 ,v84)));v296=1 -0 ;end end end if (((667 + 806)<(292 + 2766)) and (v162==(4 -3))) then local v297=0 -0 ;while true do if ((v297==0) or ((6198 -(276 + 1694))<1129)) then v84=(v165 + v163) -(1 + 0) ;v166=0;v297=(1496 -(592 + 902)) -1 ;end if ((1==v297) or (561>(14041 -11192))) then v162=1667 -(286 + 1379) ;break;end end end if (((5132 -(133 + 1008))==(359 + 3632)) and (v162==(9 -7))) then for v298=v163,v84 do local v299=0 + 0 ;local v300;while true do if ((v299==0) or ((892 + 494)>=((5395 -(628 + 1044)) -1336))) then v300=(2815 -(851 + 474)) -(873 + (1339 -722)) ;while true do if (((3702 -(856 + 1115))<=(4850 -(228 + 770))) and (v300==0)) then v166=v166 + (1307 -(5 + 1301)) ;v94[v298]=v164[v166];break;end end break;end end end break;end end break;end end elseif ((v97>(127 -81)) or (2901<(771 -(658 + 18)))) then v94[v96[2 + 0 ]]=v94[v96[1 + 2 ]] + v96[1 + 3 ] ;else local v244=1323 -(1027 + 296) ;local v245;local v246;local v247;while true do if (((2738 -1963)==775) and ((0 -(1608 -(1134 + 474)))==v244)) then v245=729 -(225 + 504) ;v246=nil;v244=1;end if (((675 -374)<(2598 -(1922 -(112 + 928)))) and (v244==(1148 -(327 + 820)))) then v247=nil;while true do if ((v245==((687 -(544 + 142)) + 0)) or ((977 -(82 + 135 + 25))>=(1515 + 1294))) then while true do if ((v246==(0 + 0)) or ((1176 + 3191)==14)) then v247=v96[1 + 1 ];v94[v247]=v94[v247]();break;end end break;end if ((v245==(0 -0)) or ((4787 -(288 + (144 -43)))<(2503 + 384))) then v246=0 + 0 ;v247=nil;v245=1 + 0 ;end end break;end end end elseif ((v97<=((895 + 113) -(459 + (951 -451)))) or ((8230 -3257)==2265)) then if ((v97>((257 + 1440) -(1394 + 255))) or ((3494 + 1146)<(47 + 2824))) then v94[v96[4 -2 ]]=v94[v96[3]];else local v250=0 + 0 ;local v251;local v252;local v253;local v254;local v255;while true do if ((v250==((1 -0) + 1)) or (((2067 -1419) -154)>(2380 -501))) then v255=nil;while true do if ((v251==(166 -(81 + 85))) or ((7914 -5177)<=(258 + 258))) then v252=0;v253=nil;v251=346 -(275 + 70) ;end if (((7473 -(9051 -4668))<=4816) and (v251==(1 + 1))) then while true do if ((v252==(0 + 0 + 0)) or ((807 + 852)>=(2655 + 272))) then local v377=0 + 0 ;while true do if ((v377==0) or ((1999 -(93 + 1257))>=((4024 -1467) -(719 + 477)))) then v253=v96[526 -(397 + 127) ];v254=v94[v253];v377=1 + 0 + 0 ;end if (((8407 -5539)>=(1062 + 126 + 1620)) and (v377==(97 -(34 + 62)))) then v252=1;break;end end end if ((v252==(1 -0)) or ((1892 + 1663)==1798)) then v255=v94[v253 + 2 ];if ((320<=594) and (v255>(0 -0))) then if ((v254>v94[v253 + 1 + 0 ]) or (((3407 + 2077) -1465)<(1749 -1279))) then v83=v96[3];else v94[v253 + (928 -(717 + 208)) ]=v254;end elseif ((3018<(5412 -(127 + 291))) and (v254<v94[v253 + 1 + 0 ])) then v83=v96[3];else v94[v253 + ((1 + 9) -7) ]=v254;end break;end end break;end if ((v251==(1 + 0)) or (817>=(12863 -(28860 -18627)))) then local v322=0 -0 ;while true do if ((v322==(0 + 0)) or ((4446 -2242)<(1202 + 996))) then v254=nil;v255=nil;v322=1;end if (((14665 -9912)>2875) and (v322==(1 + 0))) then v251=6 -4 ;break;end end end end break;end if ((v250==(1 -0)) or (3266<476)) then v253=nil;v254=nil;v250=2 + 0 ;end if (((15909 -12387)>=(2029 + 706)) and ((56 -(40 + 16))==v250)) then v251=0 -0 ;v252=nil;v250=633 -(42 + 590) ;end end end elseif ((1757>=(1221 -362)) and (v97==((218 -(45 + 24)) -(673 -(280 + 294))))) then v94[v96[1767 -(1534 + 231) ]]=v96[1 + (4 -2) ] + v94[v96[13 -9 ]] ;else local v257=0;local v258;local v259;local v260;local v261;local v262;local v263;while true do if ((v257==((127 -(109 + 17)) + 0)) or ((6931 -(4403 -(407 + 684)))>(9572 -5578))) then v260=nil;v261=nil;v257=1970 -(1861 + 107) ;end if ((v257==((492 -(160 + 332)) -0)) or ((3638 -(19 + 55))>(6293 -(1177 + 731)))) then v258=0;v259=nil;v257=1 + 0 ;end if ((4934>=(162 + 262)) and (v257==2)) then v262=nil;v263=nil;v257=959 -(31 + 925) ;end if (((900 -274)==(2889 -2263)) and (v257==(4 -1))) then while true do if (((1231 -(567 + 664))==v258) or ((8796 -5255)<1554)) then local v323=0;while true do if ((v323==(370 -(53 + 316))) or ((2852 -1032)>=(566 + 1354 + 1650))) then v258=1;break;end if (((717 + 494)==(117 + 1094)) and (v323==(0 + 0))) then v259=1344 -(145 + (2513 -(843 + 471))) ;v260=nil;v323=1;end end end if ((v258==(417 -(341 + 75))) or ((412 + 1256)<(2032 -(647 + 416)))) then local v324=0 + 0 ;while true do if (((1730 -766)<(9211 -(3439 + 1913))) and (v324==(0 -0))) then v261=nil;v262=nil;v324=755 -((785 -(429 + 28)) + 426) ;end if (((663 + 2691)<=3702) and (v324==(1 + 0))) then v258=6 -4 ;break;end end end if ((v258==(3 -(1 + 0))) or ((2938 -(423 + 1161))>3123)) then v263=nil;while true do if ((v259==(0 -0)) or (2888>=(5319 -((2177 -(257 + 902)) + 708)))) then local v379=0 + 0 ;local v380;while true do if ((v379==(0 -0)) or (4295<=(2315 -(307 + (1587 -(1269 + 313)))))) then v380=1990 -(1200 + 790) ;while true do if ((v380==(0 -0)) or ((53 + 29 + 1145)<(1321 -(235 + 370)))) then local v433=0 + 0 ;while true do if (((6569 -(945 + 912))>(795 -(33 + 208 + 238))) and (v433==(1 -0))) then v380=1 -0 ;break;end if ((((2679 -(1478 + 116)) -612)<=(2817 -707)) and (v433==(0 -0))) then v260=v96[4 -(780 -(519 + 259)) ];v261,v262=v91(v94[v260](v13(v94,v260 + 1 + 0 ,v96[3])));v433=1 + 0 ;end end end if (((13893 -9380)<=(4972 -(228 + (140 -(12 + 116))))) and (v380==(2 -1))) then v259=2 -1 ;break;end end break;end end end if ((v259==(5 -3)) or (((464 + 226) -(529 + 100))>2955)) then for v391=v260,v84 do local v392=1140 -(694 + 446) ;local v393;while true do if ((v392==(0 + 0)) or ((7274 -3603)==(4610 -(94 + 92)))) then v393=0 -0 ;while true do if ((v393==(0 + 0)) or ((835 + 480 + 1064)==(2116 + (913 -627)))) then v263=v263 + (631 -(27 + 603)) ;v94[v391]=v261[v263];break;end end break;end end end break;end if ((3279>=(2311 -(144 + 107))) and (v259==(1 -0))) then local v381=0;local v382;while true do if ((v381==(367 -(193 + 174))) or ((2465 -(207 + 1217))>=(3581 + 496))) then v382=0 -0 ;while true do if ((399<(437 + 804)) and (v382==(1 -0))) then v259=296 -(256 + 38) ;break;end if ((v382==0) or ((2779 -(56 + 382))<=(3082 -2132))) then local v434=0;while true do if (((3131 + 236)<=((5026 -2502) + 1235)) and (v434==(1 + 0))) then v382=1192 -(934 + 257) ;break;end if (((1163 + 619)>(327 + 150)) and (v434==(0 -0))) then v84=(v262 + v260) -1 ;v263=0 -0 ;v434=1367 -(294 + 1072) ;end end end end break;end end end end break;end end break;end end end v83=v83 + 1 + 0 ;break;end end break;end end end end A,B=v28(v11(v87));if  not A[1] then local v101=0;local v102;while true do if (v101==0) then v102=v36[4][v83] or "?" ;error("Script error at ["   .. v102   .. "]:"   .. A[2] );break;end end else return v13(A,2,B);end end;end end end;return v30(v29(),{},v17)(...);end end end vv9(),...);end
